<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
    <module name="TimeAllocationMutator">
        <param name="mutationRange" value="7200.0"/>
    </module>

    <module name="controler">
        <param name="lastIteration" value="20"/>
        <param name="overwriteFiles" value="deleteDirectoryIfExists"/>
        <param name="runId" value="hamburg-1pct"/>
        <param name="outputDirectory" value="./output/output-hamburg-test/"/>
        <param name="writeEventsInterval" value="1"/>
        <param name="writePlansInterval" value="1"/>
        <param name="enableLinkToLinkRouting" value="false" />
    </module>

    <module name="global">
        <param name="coordinateSystem" value="EPSG:25832"/>
        <param name="insistingOnDeprecatedConfigVersion" value="false"/>
        <param name="numberOfThreads" value="1"/>
    </module>

    <module name="network">
        <param name="inputNetworkFile" value="test-hamburg-with-pt-network.xml.gz"/>
    </module>

    <module name="plans">
        <!-- plans file is not public, the link below requires access-->
        <param name="inputPlansFile" value="test-hamburg.plans.xml"/>
        <param name="removingUnnecessaryPlanAttributes" value="true"/>
    </module>

    <module name="vehicles">
        <param name="vehiclesFile" value="https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/scenarios/countries/de/hamburg/hamburg-v1/hamburg-v1-vehicle-types.xml"/>
    </module>

    <module name="transit">
        <param name="transitScheduleFile"
               value="test-hamburg-transitSchedule.xml.gz"/>
        <param name="vehiclesFile"
               value="test-hamburg-transitVehicles.xml.gz"/>
        <param name="useTransit" value="true"/>
    </module>

    <module name="planscalcroute">
        <param name="networkModes" value="car,ride"/>
        <parameterset type="teleportedModeParameters">
            <param name="beelineDistanceFactor" value="1.3"/>
            <param name="mode" value="bike"/>
            <param name="teleportedModeSpeed" value="3.1388889"/>
        </parameterset>
        <parameterset type="teleportedModeParameters">
            <param name="beelineDistanceFactor" value="1.3"/>
            <param name="mode" value="walk"/>
            <param name="teleportedModeSpeed" value="1.0555556"/>
        </parameterset>
    </module>

    <module name="qsim">
        <param name="endTime" value="30:00:00"/>
        <param name="flowCapacityFactor" value="0.1"/>
        <param name="mainMode" value="car"/>
        <param name="numberOfThreads" value="1"/>
        <param name="startTime" value="00:00:00"/>
        <param name="storageCapacityFactor" value="0.1"/>
        <param name="stuckTime" value="30.0"/>
        <param name="trafficDynamics" value="kinematicWaves"/>
        <param name="useLanes" value="true" />
        <param name="vehiclesSource" value="modeVehicleTypesFromVehiclesData"/>
        <param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="true"/>
    </module>

    <module name="strategy">
        <param name="fractionOfIterationsToDisableInnovation" value="0.8"/>
        <parameterset type="strategysettings">
            <param name="strategyName" value="ChangeExpBeta"/>
            <param name="subpopulation" value="person"/>
            <param name="weight" value="0.7"/>
        </parameterset>
        <parameterset type="strategysettings">
            <param name="strategyName" value="ReRoute"/>
            <param name="subpopulation" value="person"/>
            <param name="weight" value="0.05"/>
        </parameterset>
        <parameterset type="strategysettings">
            <param name="strategyName" value="SubtourModeChoice"/>
            <param name="subpopulation" value="person"/>
            <param name="weight" value="100"/>
        </parameterset>
        <parameterset type="strategysettings">
            <param name="strategyName" value="TimeAllocationMutator"/>
            <param name="subpopulation" value="person"/>
            <param name="weight" value="0.05"/>
        </parameterset>
    </module>

    <module name="subtourModeChoice">
        <param name="chainBasedModes" value="car,bike"/>
        <param name="modes" value="car,pt,bike,walk,eScooter"/>
    </module>

    <module name="transitRouter">
        <param name="extensionRadius" value="500.0"/>
    </module>

    <module name="travelTimeCalculator">
        <param name="analyzedModes" value="car"/>

        <!-- Not implemented for link2link routing -->
        <param name="separateModes" value="false"/>

        <!-- Needed for lane specific routing times -->
        <param name="calculateLinkToLinkTravelTimes" value="false" />
        <param name="calculateLinkTravelTimes" value="true" />
    </module>

    <module name="vspExperimental">
        <param name="vspDefaultsCheckingLevel" value="warn"/>
    </module>

    <module name="multiModeDrt">
        <parameterset type="drt">
            <parameterset type="ExtensiveInsertionSearch"/>
            <!-- If true, the startLink is changed to last link in the current schedule, so the taxi starts the next day at the link where it stopped operating the day before. False by default. -->
            <param name="changeStartLinkToLastLinkInSchedule" value="true" />
            <!-- allows to configure a service area per drt mode.Used with serviceArea Operational Scheme -->
            <param name="drtServiceAreaShapeFile" value="/Users/meng/shared-svn/projects/realLabHH/data/hamburg_shapeFile/hamburg_city/hamburg_stadtteil.shp" />
            <!-- Idle vehicles return to the nearest of all start links. See: DvrpVehicle.getStartLink() -->
            <param name="idleVehiclesReturnToDepots" value="false" />
            <!-- Defines the slope of the maxTravelTime estimation function (optimisation constraint), i.e. maxTravelTimeAlpha * estimated_drt_travel_time + maxTravelTimeBeta. Alpha should not be smaller than 1. -->
            <param name="maxTravelTimeAlpha" value="1.7" />
            <!-- Defines the shift of the maxTravelTime estimation function (optimisation constraint), i.e. maxTravelTimeAlpha * estimated_drt_travel_time + maxTravelTimeBeta. Beta should not be smaller than 0. -->
            <param name="maxTravelTimeBeta" value="120.0" />
            <!-- Max wait time for the bus to come (optimisation constraint). -->
            <param name="maxWaitTime" value="300.0" />
            <!-- Maximum beeline distance (in meters) to next stop location in stopbased system for access/egress walk leg to/from drt. If no stop can be found within this maximum distance will return a direct walk of type drtMode_walk. -->
            <param name="maxWalkDistance" value="2000.0" />
            <!-- Mode which will be handled by PassengerEngine and VrpOptimizer (passengers'/customers' perspective) -->
            <param name="mode" value="drt" />
            <!-- Number of threads used for parallel evaluation of request insertion into existing schedules. Scales well up to 4, due to path data provision, the most computationally intensive part, using up to 4 threads. Default value is 'min(4, no. of cores available to JVM)' -->
            <param name="numberOfThreads" value="4" />
            <!-- Operational Scheme, either of door2door, stopbased or serviceAreaBased. door2door by default -->
            <param name="operationalScheme" value="serviceAreaBased" />
            <!-- If true, the max travel and wait times of a submitted request are considered hard constraints (the request gets rejected if one of the constraints is violated). If false, the max travel and wait times are considered soft constraints (insertion of a request that violates one of the constraints is allowed, but its cost is increased by additional penalty to make it relatively less attractive). Penalisation of insertions can be customised by injecting a customised InsertionCostCalculator.PenaltyCalculator -->
            <param name="rejectRequestIfMaxWaitOrTravelTimeViolated" value="false" />
            <!-- Bus stop duration. Must be positive. -->
            <param name="stopDuration" value="60.0"/>
            <!-- Stop locations file (transit schedule format, but without lines) for DRT stops. Used only for the stopbased mode -->
            <param name="transitStopFile" value="null"/>
            <!-- Limit the operation of vehicles to links (of the 'dvrp_routing' network) with 'allowedModes' containing this 'mode'. For backward compatibility, the value is set to false by default - this means that the vehicles are allowed to operate on all links of the 'dvrp_routing' network. The 'dvrp_routing' is defined by DvrpConfigGroup.networkModes) -->
            <param name="useModeFilteredSubnetwork" value="drt"/>
            <!-- An XML file specifying the vehicle fleet. The file format according to dvrp_vehicles_v1.dtd -->
            <param name="vehiclesFile"
                   value="test-hamburg-drt-10vehicles-4seats.xml"/>
            <!-- Writes out detailed DRT customer stats in each iteration. True by default. -->
            <param name="writeDetailedCustomerStats" value="true"/>
            <parameterset type="drtfare">
                <!-- Basefare per Trip (fare = positive value) -->
                <param name="basefare" value="0.0"/>
                <!-- Minimum fare per trip (paid instead of the sum of base, time and distance fare if that sum would be lower than the minimum fare, fee = positive value). -->
                <param name="minFarePerTrip" value="2.0"/>
                <!-- Daily subscription fee (fee = positive value) -->
                <param name="dailySubscriptionFee" value="0.0"/>
                <!-- drt fare per meter (fee = positive value) -->
                <param name="distanceFare_m" value="0.00035"/>
                <!-- drt fare per hour (fee = positive value) -->
                <param name="timeFare_h" value="0.0"/>
            </parameterset>
        </parameterset>
    </module>

    <module name="swissRailRaptor" >
        <!-- KN comments: in principle, walk as alternative to drt will not work, since drt is always faster. Need to give the ASC to the router! However, with the reduced drt network we should be able to see differentiation.) -->


        <!-- Possible values: CalcLeastCostModePerStop, RandomSelectOneModePerRoutingRequestAndDirection -->
        <param name="intermodalAccessEgressModeSelection" value="CalcLeastCostModePerStop" />
        <param name="useIntermodalAccessEgress" value="true" />
        <parameterset type="intermodalAccessEgress" >
            <!-- Radius from the origin / destination coord in which transit stops are searched. Only if less than 2 transit stops are found the search radius is increased step-wise until the maximum search radius set in param radius is reached. -->
            <param name="initialSearchRadius" value="1500.0" />
            <!-- If the mode is routed on the network, specify which linkId acts as access link to this stop in the transport modes sub-network. -->
            <param name="linkIdAttribute" value="null" />
            <!-- Radius from the origin / destination coord in which transit stops are accessible by this mode. -->
            <param name="maxRadius" value="100000.0" />
            <param name="mode" value="walk" />
            <!-- If less than 2 stops were found in initialSearchRadius take the distance of the closest transit stop and add this extension radius to search again.The search radius will not exceed the maximum search radius set in param radius. -->
            <param name="searchExtensionRadius" value="1000.0" />
            <!-- Name of the transit stop attribute used to filter stops that should be included in the set of potential stops for access and egress. The attribute should be of type String. 'null' disables the filter and all stops within the specified radius will be used. -->
            <param name="stopFilterAttribute" value="null" />
            <!-- Only stops where the filter attribute has the value specified here will be considered as access or egress stops. -->
            <param name="stopFilterValue" value="null" />
        </parameterset>
        <parameterset type="intermodalAccessEgress" >
            <!-- Radius from the origin / destination coord in which transit stops are searched. Only if less than 2 transit stops are found the search radius is increased step-wise until the maximum search radius set in param radius is reached. -->
            <param name="initialSearchRadius" value="3000.0" />
            <!-- If the mode is routed on the network, specify which linkId acts as access link to this stop in the transport modes sub-network. -->
            <param name="linkIdAttribute" value="null" />
            <!-- Radius from the origin / destination coord in which transit stops are accessible by this mode. -->
            <param name="maxRadius" value="100000.0" />
            <param name="mode" value="eScooter" />
            <!-- If less than 2 stops were found in initialSearchRadius take the distance of the closest transit stop and add this extension radius to search again.The search radius will not exceed the maximum search radius set in param radius. -->
            <param name="searchExtensionRadius" value="1000.0" />
            <!-- Name of the transit stop attribute used to filter stops that should be included in the set of potential stops for access and egress. The attribute should be of type String. 'null' disables the filter and all stops within the specified radius will be used. -->
            <param name="stopFilterAttribute" value="null" />
            <!-- Only stops where the filter attribute has the value specified here will be considered as access or egress stops. -->
            <param name="stopFilterValue" value="null" />
        </parameterset>
    </module>

    <module name="planCalcScore">
        <param name="fractionOfIterationsToStartScoreMSA" value="1.0"/>
        <parameterset type="scoringParameters">
            <parameterset type="modeParams">
                <param name="constant" value="-2.3"/>
                <param name="marginalUtilityOfTraveling_util_hr" value="0.0"/>
                <param name="mode" value="car"/>
                <param name="monetaryDistanceRate" value="-0.0002"/>
                <param name="dailyMonetaryConstant" value="-5.3"/>
            </parameterset>
            <parameterset type="modeParams">
                <param name="constant" value="-0.0"/>
                <param name="marginalUtilityOfTraveling_util_hr" value="0.0"/>
                <param name="mode" value="ride"/>
                <param name="monetaryDistanceRate" value="-0.0002"/>
                <param name="dailyMonetaryConstant" value="-0.0"/>
            </parameterset>
            <parameterset type="modeParams">
                <param name="constant" value="-0.0"/>
                <param name="marginalUtilityOfTraveling_util_hr" value="-4.8"/>
                <param name="mode" value="pt"/>
                <param name="dailyMonetaryConstant" value="-2.3"/>
            </parameterset>
            <parameterset type="modeParams">
                <param name="constant" value="0.0"/>
                <param name="marginalUtilityOfTraveling_util_hr" value="-12.3"/>
                <param name="mode" value="bike"/>
            </parameterset>
            <parameterset type="modeParams">
                <param name="marginalUtilityOfTraveling_util_hr" value="0.0"/>
                <param name="mode" value="walk"/>
            </parameterset>
        </parameterset>
    </module>

    <module name="transitRouter">
        <!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
        <param name="directWalkFactor" value="1.0"/>
        <!-- maximum beeline distance between stops that agents could transfer to by walking -->
        <param name="maxBeelineWalkConnectionDistance" value="300.0"/>
    </module>
</config>